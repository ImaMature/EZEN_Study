1. String 객체를 배열에 집어넣기
예시)
	String coffeeType;
	String coffeePrice;
	String coffeeStock;
	객체 3개 선언
	
// 8. 현재 커피 리스트를 출력하는 메소드입니다.
	public static void adminCoffeeList() {
		for (int i = 0; i < project_Main.coffeeList.length; i++) {
			if (project_Main.coffeeList[i] != null) {
				System.out.println("커피 이름 : " + project_Main.coffeeList[i].coffeeType);
				System.out.println("커피 가격 : " + project_Main.coffeeList[i].coffeePrice);
				System.out.println("커피 재고 : " + project_Main.coffeeList[i].coffeeStock);
			}
		}
	}
	
정리 : 외부 클래스의 배열을 반복문으로 출력하기
for (int i = 0; i < 외부클래스명.해당 배열명.length; i++) {
	if


String 타입의 객체들을 배열에 순서대로 집어넣기
외부클래스명.배열명[i].해당객체	"."을사용한다.


2. 반복문 제어

boolean(객체)=true;
while(객체){
내용;
 객체 = false;}
 
 boolean(false)가 되므로 반복문 중지하고 그전 명령으로 이동

 
 3. 자바에서 사용되는 void란?
 void의 역할은 return 되는 타입이 없음을 의미합니다. 즉 아무것도 리턴하지 않음을 선언해주는 것과 같습니다. 

20211014
 4. 생성자란?
 	1) 정의
 	 new 연산자를 통해서 인스턴스를 생성할 때 반드시 호출이 되고 제일 먼저 실행되는 일종의 메소드(메소드와는 다름)
 	2) 역할
 	 인스턴스 변수를 초기화 시키는 역할을 한다
 	3) 선언 방법?	
 	 public 클래스 (매개변수) {...}
 	 * 클래스는 생성자를 정의하는 클래스의 이름과 동일하게 적어줘야함
 	4) 종류 및 사용
 	 클래스를 정의할 때 생성자를 생략하면 컴파일러가 자동적으로 기본생성자(Default)를 생성해줌. [출처] https://url.kr/9huocy
 	 예시)
 		public class ConstructorEx01 {
		//	public ConstructorEx01(){ } // Default Constructor 자동 생성
	
			public static void main(String[] args) {
			(Default) ConstructorEx01 ce = new ConstructorEx01(); // 인스턴스 생성 및 생성자 호출
			}
		}
	5) 생성자와 메소드의 차이?
		[생성자]
		 - 반드시 클래스명과 동일하게 정의하여야한다.
		 - 생성자 앞에는 접근제어자(public)만 올 수 있다.	
		 - 반환 값이 없으므로 void나 자료형을 작성할 수 없다.
	 	[메소드]
	 	 - 메소드는 접근자와 클래스명 사이에 static과 같은 수식어를 작성할 수 있다.
	 	 - 메소드는 void나 자료형이 있어야 한다.

5. 메모리 (스택과 힙)
	기본 타입 변수는 스택 영역에 직접 값을 가진다.
	참조 타입 변수는 값이 힙 영역이나 메소드 영역의 객체 주소를 가진다.
	ex) int[] scores = {10, 20, 30}
	스택영역						힙 영역
	scores , 5번지	
			
6.  기본 API 클래스
	1) 정의
	프로그램 개발에 자주 사용되는 클래스 및 인터페이스의 모음
	
	2) java.lang 패키지
	자바프로그램의 기본적인 클래스들을 담고 있는 패키지
	import 없이 사용할 수 있음
	
	3) java.util 패키지
	자바 프로그램 개발에 필요한 컬렉션 클래스들을 담고 있는 패키지
	
	4) Object 클래스
	자바의 모든 클래스들의 최상위 부모.
	모든 클래스들이 Object를 상속하기 때문에 모든 클래스에서 사용가능하다.
	필드가 없고, 메소드들로 구성되어 있다.
		 	 