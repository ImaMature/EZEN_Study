package Day05;

public class Day05_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		/* 
		 * 중요한거 
		 * 1. 출력할 수 있어야됨.
		 * 2. 입력받는 거 (Scanner~)
		 * 3. 데이터 저장 [ 변수 ] : 자료형	boolean, char, int 같은거
		 * 4. 데이터 연산 [ 연산자 ]
		 * 5. 제어문, 반복문
		 * 6. 배열[동일한 자료의 변수를 여러개 선언]
		 * 
		 * 여러가지 클래스를 쓰면서 이해해야됨.
		 * 암기 보다는 구글링
		 * 한달 지나면 까먹기 쉬움
		 * 
		 */
		
		
////	복습 		////
		//변수 : 미리 정해진 크기의 데이터 저장 
			// 변수의 준비물
				// 1. 자료형 [상자크기] 2. 변수명 [상자이름] 3. 초기값 [상자의 값]
		
				int a = 10;	// 변수 예시
		
			// 많은 변수가 필요할 때 선언과 관리 효율 떨어짐
				// 따라서 나온 것이 배열!! => 동일한 크기 상자의 여러개 변수 선언
				// 배열의 준비물
				// 1. 자료형 2. 배열명 3. 배열길이[변수 개수]
				// 저장되는 순서 : 인덱스 (0번 부터 시작 ~ 배열길이의 -1)
				// 단점 : 메모리 효율성이 감소될 수 있음. <----> 리스트가 가변에 좋음.
		
				// 예시)
				int [] 배열 = new int [10];	// 인덱스 : ( 0 ~ 9 )
				
			// 변수 / 배열 => 메모리
				// 메모리는 하나의 자료형의 크기만큼 주소값[16진수 : ] 생성
				// 컴퓨터는 주소값을 통한 메모리 접근
		
				// 예시)
				int [] b = new int [10];	// int : 4바이트
							// 배열 크기 = 4바이트 * 10 => 40바이트
				
		// 1차원 배열 : 배열의 길이 // 4바이트 *3 => 12바이트
		int [] c = new int [3];
			c[0]= 80; c[1] = 90; c[2]=100;
				
		// 2차원 배열 : 배열의 [가로길이(행)] [세로길이(열)]	// 4바이트 *2*3 => 24바이트
		int [][] d = new int [2][3];
			d [0][0] = 80; d[0][1] = 90; d[0][2] = 100;
			d [1][0] = 40; d[1][1] = 50; d[1][2] = 60;
			
			System.out.println("2차원 배열 : " + d);		// 주소값이 나옴
			System.out.println("배열 [0][0] : " + d[0][0]);	// 값이 나옴, 80
			System.out.println("배열 전체 가로 길이 : "  + d.length);
			System.out.println("배열 전체 세로 길이 : " + d[0].length);
			
		// 문제1 : 반복문을 이용한 문제
			// 0 ~ 49까지 첫번째 행에 저장
			// 50 ~ 99까지 두번째 행에 저장하는 2차원 배열 선언 및 출력
			int array [][] = new int [2][50];
			
			for (int i =0; i<100; i++) {	// i는 0 ~ 100미만까지 1씩증가
				
				if (i < 50) array[0][i] = i;	//해당 i 인덱스의 i값 넣기	
				
				// i가 0일때 array[0][0] = 0
				// i가 1일때 array[0][1] = 1  ~~~~ i가 49일떼 array[0][49] = 49
				
				else array[1][i-50] = i;
				
				// i가 50일때 array[1][(50-50)0] = 50 ~~~ i 가 99일때 array[1][(99-49)] = 99
			}	
				
				for (int i = 0; i<100; i++) {
					if(i<50) {System.out.printf("[%2d]", array[0][i]);} // %2d : 정수가 2칸 차지
					else {System.out.printf("[%2d]" ,array[1][i-50]);}
					if (i==49) {System.out.println();}
				}
			
			
		// 3차원[다차원] 배열의 [가로길이] [세로길이] [높이]		
		int [][][] e = new int [10][10][10];	// 4바이트 *10*10*10 => 1000칸 => 4000바이트
	}

}
